(defwidget bar []
  (centerbox :orientation "v"
    (workspaces)
    (label :text "M")
    (sidestuff)))

(defvar time-visible true)   ; for :run-while property of below variable
                              ; when this turns true, the polling starts and
                              ; var gets updated with given interval

(defpoll time :interval "1s"
              :initial "initial-value"  ; optional, defaults to poll at startup
              :run-while time-visible   ; optional, defaults to 'true'
  `date +%H:%M:%S`)

(defwidget music []
  (box :class "music"
       :orientation "v"
       :space-evenly false
       :halign "center"
    {music != "" ? "ðŸŽµ${music}" : ""}))

(defwidget workspaces
  (literal :content workspace))

(deflisten workspace "scripts/workspace")

(defwidget sidestuff []
  (box :class "sidestuff" 
       :orientation "v" 
       :space-evenly false 
       :halign "center"
       :valign "end"
    (volumebar)
    (metric :value 75
            :tooltipmessage "RAM Usage"
            :circleclass "ramcircle")
    (metric :value cpuusage
            :tooltipmessage "CPU Usage"
            :circleclass "cpucircle")
    (metric :value 75
            :tooltipmessage "Disk Usage"
            :circleclass "diskcircle")))

; volume stuff

(defwidget volumebar []
  (eventbox :onhover "eww update showvolume=true"
            :onhoverlost "eww update showvolume=false"
  (box      :orientation "v"
            :space-evenly "false"
            :spacing "2"
  (revealer :transition "slideup"
            :reveal showvolume
            :duration "550ms"
  (scale    :class {mute.right ? "volumebar" : "volumebar muted"}
            :value volume
            :orientation "v"
            :flipped true
            :tooltip "Volume: ${volume}%"
            :max 101
            :min 0
            :onchange "amixer set Master {}%"))
    (button :onclick {mute.right ? "amixer set Master mute" : "amixer set Master unmute"}
            :class {mute.right ? "volume-icon" : "volume-icon muted" }
            {mute.right ? "ï€¨" : "ïš©"}))))

(defpoll volume :interval "1s"
  "amixer sget Master | awk -F '[^0-9]+' '/Left:/{print $3}'")

(defpoll mute :initial `{"left": "false", "right": "true"}` 
              :interval "0.1s" 
              `scripts/mutedness.sh`)

(defvar showvolume false)

; circles

(defpoll cpuusage :interval "10s"
                  :initial "scripts/cpuusage.sh"
                  "scripts/cpuusage.sh")

(defwidget metric [value circleclass tooltipmessage]
  (box :orientation "v"
       :class "metric"
       :space-evenly false
       :tooltip tooltipmessage
    (circular-progress :value value
                       :class circleclass
                       :start-at 0
                       :thickness 10
                       :clockwise: true)))

(deflisten music :initial ""
  "playerctl --follow metadata --format '{{ artist }} - {{ title }}' || true")

(defwindow bar
           :class bar
           :monitor 0
           :geometry (geometry :x "5px"
                               :y "0%"
                               :width "30px"
                               :height "90%"
                               :anchor "right center")
           :stacking "fg"
           :reserve (struts :distance "40px" :side "top")
           :windowtype "dock"
           :wm-ignore false
					 :exclusive true
  (bar))

